angular.module("ngDraggable",[]).service("ngDraggable",[function(){var scope=this;scope.inputEvent=function(event){return angular.isDefined(event.touches)?event.touches[0]:angular.isDefined(event.originalEvent)&&angular.isDefined(event.originalEvent.touches)?event.originalEvent.touches[0]:event}}]).directive("ngDrag",["$rootScope","$parse","$document","$window","ngDraggable",function($rootScope,$parse,$document,$window,ngDraggable){return{restrict:"A",link:function(scope,element,attrs){scope.value=attrs.ngDrag;var offset,_mx,_my,_tx,_ty,_mrx,_mry,_dragHandle,_centerAnchor=!1,_hasTouch="ontouchstart"in window||window.DocumentTouch&&document instanceof DocumentTouch,_pressEvents="touchstart mousedown",_moveEvents="touchmove mousemove",_releaseEvents="touchend mouseup",_myid=scope.$id,_data=null,_dragOffset=null,_dragEnabled=!1,_pressTimer=null,onDragSuccessCallback=$parse(attrs.ngDragSuccess)||null,allowTransform=angular.isDefined(attrs.allowTransform)?scope.$eval(attrs.allowTransform):!0,getDragData=$parse(attrs.ngDragData),_deregisterRootMoveListener=angular.noop,initialize=function(){if(element.attr("draggable","false"),element[0].querySelectorAll)var dragHandles=angular.element(element[0].querySelectorAll("[ng-drag-handle]"));else var dragHandles=element.find("[ng-drag-handle]");dragHandles.length&&(_dragHandle=dragHandles),toggleListeners(!0)},toggleListeners=function(enable){enable&&(scope.$on("$destroy",onDestroy),scope.$watch(attrs.ngDrag,onEnableChange),scope.$watch(attrs.ngCenterAnchor,onCenterAnchor),_dragHandle?_dragHandle.on(_pressEvents,onpress):element.on(_pressEvents,onpress),_hasTouch||"img"!=element[0].nodeName.toLowerCase()||element.on("mousedown",function(){return!1}))},onDestroy=function(){toggleListeners(!1)},onEnableChange=function(newVal){_dragEnabled=newVal},onCenterAnchor=function(newVal){angular.isDefined(newVal)&&(_centerAnchor=newVal||"true")},isClickableElement=function(evt){return angular.isDefined(angular.element(evt.target).attr("ng-cancel-drag"))},onpress=function(evt){_dragEnabled&&(isClickableElement(evt)||("mousedown"!=evt.type||0==evt.button)&&(_hasTouch?(cancelPress(),_pressTimer=setTimeout(function(){cancelPress(),onlongpress(evt)},100),$document.on(_moveEvents,cancelPress),$document.on(_releaseEvents,cancelPress)):onlongpress(evt)))},cancelPress=function(){clearTimeout(_pressTimer),$document.off(_moveEvents,cancelPress),$document.off(_releaseEvents,cancelPress)},onlongpress=function(evt){_dragEnabled&&(evt.preventDefault(),offset=element[0].getBoundingClientRect(),_dragOffset=allowTransform?offset:{left:document.body.scrollLeft,top:document.body.scrollTop},element.centerX=element[0].offsetWidth/2,element.centerY=element[0].offsetHeight/2,_mx=ngDraggable.inputEvent(evt).pageX,_my=ngDraggable.inputEvent(evt).pageY,_mrx=_mx-offset.left,_mry=_my-offset.top,_centerAnchor?(_tx=_mx-element.centerX-$window.pageXOffset,_ty=_my-element.centerY-$window.pageYOffset):(_tx=_mx-_mrx-$window.pageXOffset,_ty=_my-_mry-$window.pageYOffset),$document.on(_moveEvents,onmove),$document.on(_releaseEvents,onrelease),_deregisterRootMoveListener=$rootScope.$on("draggable:_triggerHandlerMove",function(event,origEvent){onmove(origEvent)}))},onmove=function(evt){_dragEnabled&&(evt.preventDefault(),element.hasClass("dragging")||(_data=getDragData(scope),element.addClass("dragging"),element.parent().addClass("childDragging"),-1!=_data.blockId&&element.parent().parent().addClass("insideBullet"),$rootScope.$broadcast("draggable:start",{x:_mx,y:_my,tx:_tx,ty:_ty,event:evt,element:element,data:_data})),_mx=ngDraggable.inputEvent(evt).pageX,_my=ngDraggable.inputEvent(evt).pageY,_centerAnchor?(_tx=_mx-element.centerX-_dragOffset.left,_ty=_my-element.centerY-_dragOffset.top):(_tx=_mx-_mrx-_dragOffset.left,_ty=_my-_mry-_dragOffset.top),moveElement(_tx,_ty),$rootScope.$broadcast("draggable:move",{x:_mx,y:_my,tx:_tx,ty:_ty,event:evt,element:element,data:_data,uid:_myid}))},onrelease=function(evt){_dragEnabled&&(evt.preventDefault(),$rootScope.$broadcast("draggable:end",{x:_mx,y:_my,tx:_tx,ty:_ty,event:evt,element:element,data:_data,callback:onDragComplete,uid:_myid}),element.removeClass("dragging"),element.parent().removeClass("childDragging"),-1!=_data.blockId&&element.parent().parent().removeClass("insideBullet"),element.parent().find(".drag-enter").removeClass("drag-enter"),reset(),$document.off(_moveEvents,onmove),$document.off(_releaseEvents,onrelease),_deregisterRootMoveListener())},onDragComplete=function(evt){onDragSuccessCallback&&scope.$apply(function(){onDragSuccessCallback(scope,{$data:_data,$event:evt})})},reset=function(){element.css(allowTransform?{transform:"","z-index":"","-webkit-transform":"","-ms-transform":""}:{position:"",top:"",left:""})},moveElement=function(x,y){element.css(allowTransform?{transform:"matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, "+x+", "+y+", 0, 1)","z-index":99999,"-webkit-transform":"matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, "+x+", "+y+", 0, 1)","-ms-transform":"matrix(1, 0, 0, 1, "+x+", "+y+")"}:{left:x+"px",top:y+"px",position:"fixed"})};initialize()}}}]).directive("ngDrop",["$parse","$timeout","$window","$document","ngDraggable",function($parse,$timeout,$window,$document){return{restrict:"A",link:function(scope,element,attrs){scope.value=attrs.ngDrop,scope.isTouching=!1;var _lastDropTouch=null,_myid=scope.$id,_dropEnabled=!1,onDropCallback=$parse(attrs.ngDropSuccess),onDragStartCallback=$parse(attrs.ngDragStart),onDragStopCallback=$parse(attrs.ngDragStop),onDragMoveCallback=$parse(attrs.ngDragMove),initialize=function(){toggleListeners(!0)},toggleListeners=function(enable){enable&&(scope.$watch(attrs.ngDrop,onEnableChange),scope.$on("$destroy",onDestroy),scope.$on("draggable:start",onDragStart),scope.$on("draggable:move",onDragMove),scope.$on("draggable:end",onDragEnd))},onDestroy=function(){toggleListeners(!1)},onEnableChange=function(newVal){_dropEnabled=newVal},onDragStart=function(evt,obj){_dropEnabled&&(isTouching(obj.x,obj.y,obj.element),attrs.ngDragStart&&$timeout(function(){onDragStartCallback(scope,{$data:obj.data,$event:obj})}))},onDragMove=function(evt,obj){_dropEnabled&&(isTouching(obj.x,obj.y,obj.element),attrs.ngDragMove&&$timeout(function(){onDragMoveCallback(scope,{$data:obj.data,$event:obj})}))},onDragEnd=function(evt,obj){return _dropEnabled&&_myid!==obj.uid?(isTouching(obj.x,obj.y,obj.element)&&(obj.callback&&obj.callback(obj),attrs.ngDropSuccess&&$timeout(function(){onDropCallback(scope,{$data:obj.data,$event:obj,$target:scope.$eval(scope.value)})})),attrs.ngDragStop&&$timeout(function(){onDragStopCallback(scope,{$data:obj.data,$event:obj})}),void updateDragStyles(!1,obj.element)):void updateDragStyles(!1,obj.element)},isTouching=function(mouseX,mouseY,dragElement){var touching=hitTest(mouseX,mouseY);return scope.isTouching=touching,touching&&(_lastDropTouch=element),updateDragStyles(touching,dragElement),touching},updateDragStyles=function(touching,dragElement){touching?(element.addClass("drag-enter"),dragElement.addClass("drag-over")):_lastDropTouch==element&&(_lastDropTouch=null,element.removeClass("drag-enter"),dragElement.removeClass("drag-over"))},hitTest=function(x,y){var bounds=element[0].getBoundingClientRect();return x-=$document[0].body.scrollLeft+$document[0].documentElement.scrollLeft,y-=$document[0].body.scrollTop+$document[0].documentElement.scrollTop,x>=bounds.left&&x<=bounds.right&&y<=bounds.bottom&&y>=bounds.top};initialize()}}}]).directive("ngDragClone",["$parse","$timeout","ngDraggable",function(){return{restrict:"A",link:function(scope,element){var img,_allowClone=!0,_dragOffset=null;scope.clonedData={};var initialize=function(){img=element.find("img"),element.attr("draggable","false"),img.attr("draggable","false"),reset(),toggleListeners(!0)},toggleListeners=function(enable){enable&&(scope.$on("draggable:start",onDragStart),scope.$on("draggable:move",onDragMove),scope.$on("draggable:end",onDragEnd),preventContextMenu())},preventContextMenu=function(){img.off("mousedown touchstart touchmove touchend touchcancel",absorbEvent_),img.on("mousedown touchstart touchmove touchend touchcancel",absorbEvent_)},onDragStart=function(evt,obj){_allowClone=!0,angular.isDefined(obj.data.allowClone)&&(_allowClone=obj.data.allowClone),_allowClone&&(scope.$apply(function(){scope.clonedData=obj.data}),element.css("width",obj.element[0].offsetWidth),element.css("height",obj.element[0].offsetHeight),moveElement(obj.tx,obj.ty)),_dragOffset=element[0].getBoundingClientRect()},onDragMove=function(evt,obj){_allowClone&&(_tx=obj.tx+_dragOffset.left,_ty=obj.ty+_dragOffset.top,moveElement(_tx,_ty))},onDragEnd=function(){_allowClone&&reset()},reset=function(){element.css({left:0,top:0,position:"fixed","z-index":-1,visibility:"hidden"})},moveElement=function(x,y){element.css({transform:"matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, "+x+", "+y+", 0, 1)","z-index":99999,visibility:"visible","-webkit-transform":"matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, "+x+", "+y+", 0, 1)","-ms-transform":"matrix(1, 0, 0, 1, "+x+", "+y+")"})},absorbEvent_=function(event){var e=event;return e.preventDefault&&e.preventDefault(),e.stopPropagation&&e.stopPropagation(),e.cancelBubble=!0,e.returnValue=!1,!1};initialize()}}}]).directive("ngPreventDrag",["$parse","$timeout",function(){return{restrict:"A",link:function(scope,element){var initialize=function(){element.attr("draggable","false"),toggleListeners(!0)},toggleListeners=function(enable){enable&&element.on("mousedown touchstart touchmove touchend touchcancel",absorbEvent_)},absorbEvent_=function(event){var e=event.originalEvent;return e.preventDefault&&e.preventDefault(),e.stopPropagation&&e.stopPropagation(),e.cancelBubble=!0,e.returnValue=!1,!1};initialize()}}}]).directive("ngCancelDrag",[function(){return{restrict:"A",link:function(scope,element){element.find("*").attr("ng-cancel-drag","ng-cancel-drag")}}}]).directive("ngDragScroll",["$window","$interval","$timeout","$document","$rootScope",function($window,$interval,$timeout,$document,$rootScope){return{restrict:"A",link:function(scope,element,attrs){var lastMouseEvent=null,config={verticalScroll:attrs.verticalScroll||!0,horizontalScroll:attrs.horizontalScroll||!0,activationDistance:attrs.activationDistance||75,scrollDistance:attrs.scrollDistance||15},reqAnimFrame=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(callback){window.setTimeout(callback,1e3/60)}}(),animationIsOn=!1,createInterval=function(){function nextFrame(callback){var args=Array.prototype.slice.call(arguments);animationIsOn&&reqAnimFrame(function(){$rootScope.$apply(function(){callback.apply(null,args),nextFrame(callback)})})}animationIsOn=!0,nextFrame(function(){if(lastMouseEvent){var viewportWidth=Math.max(document.documentElement.clientWidth,window.innerWidth||0),viewportHeight=Math.max(document.documentElement.clientHeight,window.innerHeight||0),scrollX=0,scrollY=0;if(config.horizontalScroll&&(lastMouseEvent.clientX<config.activationDistance?scrollX=-config.scrollDistance:lastMouseEvent.clientX>viewportWidth-config.activationDistance&&(scrollX=config.scrollDistance)),config.verticalScroll&&(lastMouseEvent.clientY<config.activationDistance?scrollY=-config.scrollDistance:lastMouseEvent.clientY>viewportHeight-config.activationDistance&&(scrollY=config.scrollDistance)),0!==scrollX||0!==scrollY){var currentScrollLeft=$window.pageXOffset||$document[0].documentElement.scrollLeft,currentScrollTop=$window.pageYOffset||$document[0].documentElement.scrollTop,elementTransform=element.css("transform");element.css("transform","initial"),$window.scrollBy(scrollX,scrollY);var horizontalScrollAmount=($window.pageXOffset||$document[0].documentElement.scrollLeft)-currentScrollLeft,verticalScrollAmount=($window.pageYOffset||$document[0].documentElement.scrollTop)-currentScrollTop;element.css("transform",elementTransform),lastMouseEvent.pageX+=horizontalScrollAmount,lastMouseEvent.pageY+=verticalScrollAmount,$rootScope.$emit("draggable:_triggerHandlerMove",lastMouseEvent)}}})},clearInterval=function(){animationIsOn=!1};scope.$on("draggable:start",function(event,obj){obj.element[0]===element[0]&&(animationIsOn||createInterval())}),scope.$on("draggable:end",function(event,obj){obj.element[0]===element[0]&&animationIsOn&&clearInterval()}),scope.$on("draggable:move",function(event,obj){obj.element[0]===element[0]&&(lastMouseEvent=obj.event)})}}}]);
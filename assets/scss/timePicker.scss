@charset "UTF-8";

@import "compass/CSS3";
@import "ceaser-easing";

@import "variables";


.timePickerContainer {
    direction: ltr;
    width: 200px;
    
    >div {
        text-align: center;
        
        &.hour {
            &:after {
                content: ':';
                position: relative;
                display: inline-block;
                margin-right: -13px;
                width: 0;
            }
        }
        
        select {
            padding: 0;
            width: 3em !important;
            text-align: center;

            option {
                text-align: center;
            }
        }
    }
    
}

nu-timepicker {
    direction: ltr;
    position: relative;
    display: inline-block;
}

.nuTimepicker {

    position: absolute;
    display: block;
    top: 2em;
    left: 0;
    width: 24em;
    height: 15em;
    z-index: 9999999;
    border-radius: .5em;
    overflow: hidden;
    border: 1px solid #e7e6e6;
    @include transform-origin(0,0);
    @include transition(all .3s);
    @include box-shadow(0 2px 5px 0 rgba(black,.2));

    &.ng-hide {
        opacity: 0;
        @include scale(.5);
    }

    .split {
        height: 100%;
    }

    .preview {
        background: rgba($pink, .93);
        color: rgba(white, .47);

        .time {
            font-size: 2.3em;
            text-align: center;
            padding-right: 0.2em;
            margin-top: 0.8em;
        }
        .type {
            text-align: center;
            font-size: 1.3em;
        }

        span {
            cursor: pointer;

            &.active {
                color: white;
            }
        }
    }
    .picker {
        background: white;

        .hour {

        }
        .minute {

        }

        >div {
            width: 30px;
            height: 30px;
            @include transition(all .3s);
            position: absolute;
            display: block;
            top: 50%;
            left: 50%;
            @include vtrans(scale(1) translate(-50%, -50%));
            
            &.ng-hide {
                opacity: 0;
                @include vtrans(scale(0) translate(-50%, -50%));
            }

            >span {
                position: absolute;
                display: block;
                width: 30px;
                height: 30px;
                //border: 1px solid black;
                border-radius: 50%;
                text-align: center;
                line-height: 1.8;
                font-size: 1em;
                //border: 1px solid #00BCD4;
                color: #b5b5b5;
                //background: #fff;
                text-indent: -3px;
            }
            
            .back {
                transform: scale(6.5);
                background: #eee;
                color: white;
                //border: 1px dashed white;
                line-height: 1.2;
                box-sizing: border-box;
                padding: 0;
                z-index: 0 !important;
            }

            .dot {
                @include scale(.3);
                background: #868686;
            }
            
            .leaf {
                top: 0;
                left: 0;
                z-index: 1;
                cursor: pointer;
                @include transition(all .3s);
                //border: 1px solid #e4e6e6;

                &:hover {
                    background: darken(#ededed, 3%);
                }

                &.active {
                    background: white;
                    color: $pink;
                }
                                
                $dist: 4.7;
                    
                    @for $i from 0 through 11 {
                        &:nth-child(#{$i + 1}) {
                            //@include transition(all .3s #{$i * .07}s ceaser($easeOutBack));
                            @include translate( #{cos($i*30deg - 60deg) * $dist}em , #{sin($i*30deg - 60deg) * $dist}em );
                        }
                    }
            }
        }
    }
}